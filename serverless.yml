service: mayu-delivery

provider:
  name: aws
  runtime: python3.7
  region: ap-northeast-1
  stage: ${opt:stage, 'stg'}
  deploymentBucket: sls-deps
  environment: ${file(./env/${self:provider.stage}.yml)}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:PutObject"
      # Resource: "arn:aws:s3:::stg-mayu-media-daily"
      Resource: "*"
  apiGateway:
    binaryMediaTypes:
      - "*/*"

plugins:
  - serverless-python-requirements
  - serverless-domain-manager

custom:
  scheduleEnabled:
    prod: true
    stg: false
    local: false
  pythonRequirements:
    dockerizePip: true
  domainName-prod: "mayurer.com"
  domainName-stg: "stg.mayurer.com"
  customDomain:
    domainName: ${self:custom.domainName-${self:provider.stage}}
    certificateName: "mayurer.com"
    basePath: ""
    stage: ${self:provider.stage}
    createRoute53Record: true
    apiType: rest
    endpointType: "edge"
    securityPolicy: tls_1_2

functions:
  search_tweets:
    handler: media_deliver.send_media
    timeout: 900
    events:
      - http:
          path: linebot/send_media
          method: post
      - schedule:
          rate: cron(30 3 * * ? *)
          enabled: ${self:custom.scheduleEnabled.${self:provider.stage}}
  check_official:
    handler: media_deliver.send_media
    timeout: 300
    events:
      - http:
          path: linebot/send_media
          method: post
      - schedule:
          rate: rate(1 hour)
          enabled: ${self:custom.scheduleEnabled.${self:provider.stage}}
  search_news:
    handler: media_deliver.send_media
    timeout: 300
    events:
      - http:
          path: linebot/send_media
          method: post
      - schedule:
          rate: cron(0 9,21 * * ? *)
          enabled: ${self:custom.scheduleEnabled.${self:provider.stage}}
  rich_menu:
    handler: rich_menu.createRichmenu

resources:
  Resources:
    S3MayuDailyPhotos:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.stage}-mayu-media-daily
